# log_format http_request_log_format '$request [$http_access_control_request_method] -> [$upstream_http_access_control_allow_origin]';
# http {
# map $http_upgrade $connection_upgrade {  
#     default upgrade;
#     ''      close;
# }
# }
server {
	listen 443 ssl;
	root /www/data;

	ssl 					on;
	ssl_certificate 		/etc/nginx/cert.crt;
	ssl_certificate_key 	/etc/nginx/cert.key;
	ssl_protocols       	TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers         	HIGH:!aNULL:!MD5;

	# proxy_set_header        Host 				$host;
	# proxy_set_header        X-Real-IP 			$remote_addr;
	# proxy_set_header		X-Forwarded-For		$proxy_add_x_forwarded_for;
	# proxy_set_header        X-Forwarded-Proto 	$scheme;
	# proxy_set_header        Origin 				$http_origin;
	# proxy_set_header   		Connection 			keep-alive;

	    # Configure the SignalR Endpoint
    location /notification {
      # App server url
    #   proxy_pass http://localhost:5000;
		proxy_pass 				http://backend:8000;


      # Configuration for WebSockets
      proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection $connection_upgrade;
      proxy_cache off;
      # WebSockets were implemented after http/1.0
      proxy_http_version 1.1;

      # Configuration for ServerSentEvents
      proxy_buffering off;

      # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
      proxy_read_timeout 100s;

      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

	# location /notification {
	# 	proxy_read_timeout 100s;
	# 	proxy_pass 				http://backend:8000/notification;
	# }

	location / {	
		proxy_pass 				http://backend:8000/;
	}
}

server {
	listen 80;
	location / {
		proxy_pass http://backend:8000/;
	}
}